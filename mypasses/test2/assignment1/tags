!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ID	Assignment1.cpp	/^			static char ID;$/;"	m	class:__anon1::MyCallGraphPass	file:
ID	Assignment1.cpp	/^char MyCallGraphPass::ID= 0;$/;"	m	class:MyCallGraphPass	file:
MyCallGraphPass	Assignment1.cpp	/^	MyCallGraphPass::MyCallGraphPass():ModulePass(ID) {$/;"	f	class:__anon1::MyCallGraphPass
MyCallGraphPass	Assignment1.cpp	/^	class MyCallGraphPass:public ModulePass,public CallGraph{$/;"	c	namespace:__anon1	file:
addToCallGraph	Assignment1.cpp	/^	void MyCallGraphPass::addToCallGraph(Function *f) {$/;"	f	class:__anon1::MyCallGraphPass
callsExternalNode	Assignment1.cpp	/^			CallGraphNode *callsExternalNode;$/;"	m	class:__anon1::MyCallGraphPass	file:
edgeCount	Assignment1.cpp	/^			int edgeCount ;$/;"	m	class:__anon1::MyCallGraphPass	file:
externalCallingNode	Assignment1.cpp	/^			CallGraphNode *externalCallingNode;$/;"	m	class:__anon1::MyCallGraphPass	file:
functionCount	Assignment1.cpp	/^			int functionCount;$/;"	m	class:__anon1::MyCallGraphPass	file:
getAnalysisUsage	Assignment1.cpp	/^	void MyCallGraphPass::getAnalysisUsage ( AnalysisUsage &au) const{$/;"	f	class:__anon1::MyCallGraphPass
getOrInsertFunction	Assignment1.cpp	/^	CallGraphNode* MyCallGraphPass::getOrInsertFunction(Function *f) {$/;"	f	class:__anon1::MyCallGraphPass
maxBasicBlocks	Assignment1.cpp	/^			int maxBasicBlocks;$/;"	m	class:__anon1::MyCallGraphPass	file:
maxCFGEdge	Assignment1.cpp	/^			int maxCFGEdge;$/;"	m	class:__anon1::MyCallGraphPass	file:
minBasicBlocks	Assignment1.cpp	/^			int minBasicBlocks;$/;"	m	class:__anon1::MyCallGraphPass	file:
minCFGEdge	Assignment1.cpp	/^			int minCFGEdge;$/;"	m	class:__anon1::MyCallGraphPass	file:
result	Assignment1.cpp	/^	void MyCallGraphPass::result() {$/;"	f	class:__anon1::MyCallGraphPass
root	Assignment1.cpp	/^			CallGraphNode *root;$/;"	m	class:__anon1::MyCallGraphPass	file:
runOnModule	Assignment1.cpp	/^	bool MyCallGraphPass::runOnModule(Module &m) {$/;"	f	class:__anon1::MyCallGraphPass
showAllInstructionsInBasicBlock	Assignment1.cpp	/^	void MyCallGraphPass::showAllInstructionsInBasicBlock(BasicBlock *bBlock) {$/;"	f	class:__anon1::MyCallGraphPass
traverseDominatorTree	Assignment1.cpp	/^	int MyCallGraphPass::traverseDominatorTree (DominatorTree *dt , Function *f) {$/;"	f	class:__anon1::MyCallGraphPass
~MyCallGraphPass	Assignment1.cpp	/^	MyCallGraphPass::~MyCallGraphPass() {$/;"	f	class:__anon1::MyCallGraphPass
